{"version":3,"sources":["components/Stringify/Stringify.js","components/Stringify/index.js","components/Text/TextWithSubscription.js","components/Text/TextWithEffectsList.js","components/UserCard/UserCard.js","components/UserCard/UserCardInvalidDependencies.js","views/EffectView.js"],"names":["Stringify","_ref","children","indent","className","react_default","a","createElement","concat","JSON","stringify","__webpack_require__","d","__webpack_exports__","components_Stringify_Stringify","commentReducer","all","comment","Object","toConsumableArray","TextWithSubscription","_useReducer","useReducer","_useReducer2","slicedToArray","comments","addComment","useEffect","Api","subscribeComments","unsubscribeComments","commentCount","length","TextWithEffectsList","id","s","next","list","add","useLayoutEffect","map","text","key","UserCardInvalidDependencies","userId","_useState","useState","_useState2","user","setUser","_ref2","username","name","email","getUser","then","toggle","EffectView","visibleOne","toggleVisibilityOne","_useReducer3","_useReducer4","visibleTwo","toggleVisibilityTwo","_useReducer5","_useReducer6","visibleThree","toggleVisibilityThree","_useReducer7","_useReducer8","visibleFour","toggleVisibilityFour","setId","Fragment","CodeBlock","fileName","Button","onClick","api","Text_TextWithSubscription","type","onChange","value","target","components_UserCard_UserCardInvalidDependencies","UserCard","Link","href","Text_TextWithEffectsList"],"mappings":"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","file":"static/js/12.75a741c9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Stringify = ({ children, indent, className }) => (\n    <pre className={`stringify ${className || ''}`}>\n        {JSON.stringify(children, null, indent)}\n    </pre>\n);\n\nexport default Stringify;\n","export { default } from './Stringify';\n","import React, { useReducer, useEffect } from 'react';\n\nimport Stringify from 'components/Stringify';\nimport Api from 'api';\n\nconst commentReducer = (all, comment) => [...all, comment];\n\nconst TextWithSubscription = () => {\n    const [comments, addComment] = useReducer(commentReducer, []);\n\n    useEffect(() => {\n        Api.subscribeComments(addComment);\n        return () => Api.unsubscribeComments(addComment);\n    }, []);\n\n    return (\n        <Stringify indent={2}>{{ commentCount: comments.length }}</Stringify>\n    );\n};\n\nexport default TextWithSubscription;\n","import React, { useReducer, useEffect, useLayoutEffect } from 'react';\n\nconst TextWithEffectsList = ({ id }) => {\n    const [list, add] = useReducer((s, next) => [...s, next], []);\n\n    useEffect(() => add('useEffect onMount'), []);\n    useLayoutEffect(() => add('useLayoutEffect onMount'), []);\n\n    useEffect(() => {\n        add(`useEffect onIdChange ID:${id}`);\n        add('----------------------'); // hide-line\n        return () => add(`cleanup of useEffect onIdChange #1 ID:${id}`);\n    }, [id]);\n\n    useLayoutEffect(() => {\n        add(`useLayoutEffect onIdChange ID:${id}`);\n        return () => add(`cleanup of useLayoutEffect onIdChange ID:${id}`);\n    }, [id]);\n\n    return (\n        <ul className='text-effects-list'>\n            {list.map((text, key) => (\n                <li key={key}>{text}</li>\n            ))}\n        </ul>\n    );\n};\n\nexport default TextWithEffectsList;\n","import React, { useState, useEffect } from 'react';\n\nimport Api from 'api';\n\nconst UserCardInvalidDependencies = ({ userId }) => {\n    const [user, setUser] = useState();\n    const { username, name, email } = user || {};\n\n    useEffect(() => {\n        Api.getUser(userId).then(setUser);\n        return setUser; // Reset previous user\n    }, [userId]);\n\n    if (!user) {\n        return <h2>Loading...</h2>;\n    }\n\n    return (\n        <div>\n            <h2>\n                {userId}: {name} ({username})\n            </h2>\n            <h3>@ {email}</h3>\n        </div>\n    );\n};\n\nexport default UserCardInvalidDependencies;\n","import React, { useState, useEffect } from 'react';\n\nimport Api from 'api';\n\nconst UserCardInvalidDependencies = ({ userId }) => {\n    const [user, setUser] = useState();\n    const { username, name, email } = user || {};\n\n    useEffect(() => {\n        Api.getUser(userId).then(setUser);\n        return setUser; // Reset previous user\n    }, []); // eslint-disable-line\n\n    if (!user) {\n        return <h2>Loading...</h2>;\n    }\n\n    return (\n        <div>\n            <h2>\n                {userId}: {name} ({username})\n            </h2>\n            <h3>@ {email}</h3>\n        </div>\n    );\n};\n\nexport default UserCardInvalidDependencies;\n","import React, { useState, useReducer } from 'react';\n\nimport { TextWithSubscription } from 'components/Text';\nimport Link from 'components/Link';\nimport UserCard, { UserCardInvalidDependencies } from 'components/UserCard';\nimport { TextWithEffectsList } from 'components/Text';\nimport { CodeBlockButton } from 'components/CodeBlock';\nimport Button from 'components/common/Button';\nimport { ApiSubscribers } from 'api';\n\nconst toggle = s => !s;\n\nconst EffectView = () => {\n    const [visibleOne, toggleVisibilityOne] = useReducer(toggle, false);\n    const [visibleTwo, toggleVisibilityTwo] = useReducer(toggle, false);\n    const [visibleThree, toggleVisibilityThree] = useReducer(toggle, false);\n    const [visibleFour, toggleVisibilityFour] = useReducer(toggle, false);\n    const [id, setId] = useState(1);\n\n    return (\n        <>\n            <h1>useEffect</h1>\n\n            <h2>onMount & onUnmount</h2>\n            <CodeBlockButton fileName='components/Text/TextWithSubscription.js' />\n            <Button onClick={toggleVisibilityOne}>\n                {visibleOne ? 'Unmount' : 'Mount'}\n            </Button>\n            <div>\n                <ApiSubscribers />\n                {visibleOne && <TextWithSubscription />}\n            </div>\n\n            <h2 className='margin-top-l'>Dependency array</h2>\n            <input\n                type='number'\n                className='common-input block margin-top-m'\n                onChange={({ target: { value } }) => setId(value)}\n                value={id}\n            />\n            <CodeBlockButton\n                fileName='components/UserCard/UserCardInvalidDependencies.js'\n                text='UserCardInvalidDependencies.js'\n            />\n            <Button onClick={toggleVisibilityTwo}>\n                {visibleTwo ? 'Unmount' : 'Mount'}\n            </Button>\n            <div>\n                {visibleTwo && <UserCardInvalidDependencies userId={id} />}\n            </div>\n\n            <CodeBlockButton\n                fileName='components/UserCard/UserCard.js'\n                text='UserCard.js'\n            />\n            <Button onClick={toggleVisibilityThree}>\n                {visibleThree ? 'Unmount' : 'Mount'}\n            </Button>\n            <div>{visibleThree && <UserCard userId={id} />}</div>\n\n            {visibleTwo && (\n                <pre className='quote'>\n                    If you’re trying to write an effect that behaves differently\n                    depending on whether the component renders for the first\n                    time or not, you’re swimming against the tide! We’re failing\n                    at synchronizing if our result depends on the “journey”\n                    rather than the “destination”.\n                    <Link href='https://overreacted.io/a-complete-guide-to-useeffect/#synchronization-not-lifecycle'>\n                        overreacted.io/a-complete-guide-to-useeffect\n                    </Link>\n                </pre>\n            )}\n\n            <h2 className='margin-top-l'>useEffect, useLayoutEffect</h2>\n            <input\n                type='number'\n                className='common-input block margin-top-m'\n                onChange={({ target: { value } }) => setId(value)}\n                value={id}\n            />\n            <CodeBlockButton\n                fileName='components/Text/TextWithEffectsList.js'\n                text='Code: Order of effects and cleanups'\n            />\n            <Button onClick={toggleVisibilityFour}>\n                {visibleFour ? 'Unmount' : 'Mount'}\n            </Button>\n            <div>{visibleFour && <TextWithEffectsList id={id} />}</div>\n        </>\n    );\n};\n\nexport default EffectView;\n"],"sourceRoot":""}