{"version":3,"sources":["components/Link/Link.js","components/Link/index.js","hooks/usePosts.js","hooks/useComments.js","hooks/useForceRender.js","hooks/useForm.js","hooks/useWindowResize.js","hooks/useEventTargetValue.js","hooks/index.js","views/Main.js","views/Routes.js","components/Sidebar/Sidebar.js","App.js","index.js","components/CodeBlock/CodeBlockProvider.js","components/CodeBlock/utils.js","components/CodeBlock/CodeBlockOptions.js","components/CodeBlock/CodeBlock.js","components/CodeBlock/CodeBlockButton.js","components/CodeBlock/index.js","api/Api.js","api/ApiSubscribers.js","api/index.js","components/common/Button.js","hooks/useStore.js"],"names":["Link","_ref","children","props","Object","objectWithoutProperties","react_default","a","createElement","assign","className","target","rel","__webpack_require__","d","__webpack_exports__","components_Link_Link","initialState","posts","loading","error","reducer","state","next","objectSpread","usePosts","_useReducer","useReducer","_useReducer2","slicedToArray","setState","useEffect","Api","getPosts","then","catch","newComment","concat","toConsumableArray","useComments","comments","addComment","subscribeComments","unsubscribeComments","useForceRender","timeout","arguments","length","undefined","s","forceRender","timer","setInterval","clearTimeout","resetCommentAndError","comment","selectedUser","selectedPost","users","isLoading","isSending","useForm","onCommentsUpdate","useCallback","_ref4","Promise","all","getUsers","_ref5","_ref6","onUserChange","value","onPostChange","_ref2","prev","onCommentChange","_ref3","onSubmit","e","preventDefault","formDdata","user","post","postForm","alert","widthUpdater","window","innerWidth","useWindowResize","callback","width","updateWidth","latestCallback","useRef","addEventListener","removeEventListener","current","useEventTargetValue","initialValue","_useState","useState","_useState2","event","hooks_usePosts","hooks_useComments","hooks_useForceRender","hooks_useForm","hooks_useWindowResize","hooks_useEventTargetValue","useStore","Main","Fragment","href","Routes","navigationName","path","component","lazy","bind","Sidebar","open","toggle","checked","type","onChange","id","htmlFor","map","react_router_dom","key","to","onClick","App","components_Sidebar_Sidebar","CodeBlock","react","fallback","react_router","ReactDOM","render","src_App","document","getElementById","CodeBlockContext","createContext","indexOf","filter","CodeBlockProvider","codes","toggleCodes","resetCodes","Provider","REGEX_STRINGIFY_IMPORT","REGEX_CODEBLOCKBUTTON_IMPORT","REGEX_STRINGIFY","REGEX_CODEBLOCKBUTTON","REGEX_FRAGMENT","REGEX_EMPTY_DIV","REGEX_FRAGMENT_CONTENT","REGEX_INDENT","REGEX_NEWLINE_INDENT","REGEX_CLOSING_BRACKET","REGEX_PRETTIER_IGNORE","REGEX_ESLINT_IGNORE","REGEX_DOUBLE_NEWLINES","removePrettierAndEslintIgnoreComments","code","replace","decreaseNewlineIndent","removeStringify","removeFragment","removeCodeBlockButton","removeEmptyDivs","removeDoubleNewlines","initialOptions","hideFragment","hideStringify","hideCodeBlockBtn","fullScreen","indent","fontSize","options","name","label","resolveValueKey","Option","defineProperty","CodeBlockOptions","values","onReset","CodeBlockOptions_Option","mergeReducer","_useContext","useContext","setOptions","windowWidth","formattedCodes","formatters","repeat","Boolean","reduce","c","formatter","formatCodes","wrapperClassNames","classNames","containerClassNames","contentClassNames","CodeBlock_CodeBlockOptions","formattedCode","prism","showLineNumbers","language","style","okaidia","customStyle","parseInt","CodeBlockButton","fileName","text","setCode","Button","fetch","response","resp","components_CodeBlock_CodeBlock","CodeBlock_CodeBlockProvider","CodeBlock_CodeBlockButton","classCallCheck","this","baseUrl","subscribers","_startPollingComments","index","delay","r","json","cb","push","subscriber","_this","postIndex","asyncToGenerator","regenerator_default","mark","_callee7","wrap","_context7","getComment","sent","forEach","stop","ms","resolve","setTimeout","api_Api","ApiSubscribers","api_ApiSubscribers","_home_ariperkkio_GIT_hooks_examples_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","t","_home_ariperkkio_GIT_hooks_examples_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","toggled","react__WEBPACK_IMPORTED_MODULE_2___default","apply","updateListener","prevStore","store","listener","shouldComponentUpdate","listeners","setStore","updatedPart","_home_ariperkkio_GIT_hooks_examples_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","splice","createStore"],"mappings":"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","file":"static/js/main.081d05fd.chunk.js","sourcesContent":["import React from 'react';\n\nconst Link = ({ children, ...props }) => (\n    <a {...props} className='link' target='_blank' rel='noopener noreferrer'>\n        {children}\n    </a>\n);\n\nexport default Link;\n","export { default } from './Link';\n","import { useReducer, useEffect } from 'react';\n\nimport Api from 'api';\n\nconst initialState = {\n    posts: [],\n    loading: false,\n    error: false,\n};\n\nconst reducer = (state, next) => ({ ...state, ...next });\n\nconst usePosts = () => {\n    const [state, setState] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        setState({ loading: true });\n\n        Api.getPosts()\n            .then(posts => setState({ posts, loading: false }))\n            .catch(() => setState({ error: true, loading: false }));\n    }, []);\n\n    return state;\n};\n\nexport default usePosts;\n","import { useReducer, useEffect } from 'react';\n\nimport Api from 'api';\n\nconst reducer = (state, newComment) => [...state, newComment];\n\nconst useComments = () => {\n    const [comments, addComment] = useReducer(reducer, []);\n\n    useEffect(() => {\n        Api.subscribeComments(addComment);\n\n        return () => Api.unsubscribeComments(addComment);\n    }, []);\n\n    return comments;\n};\n\nexport default useComments;\n","import { useEffect, useReducer } from 'react';\n\nconst useForceRender = (timeout = 1000) => {\n    const [, forceRender] = useReducer(s => s + 1, 0);\n\n    useEffect(() => {\n        const timer = setInterval(forceRender, timeout);\n        return () => clearTimeout(timer);\n    }, [timeout]);\n};\n\nexport default useForceRender;\n","import { useReducer, useEffect, useCallback } from 'react';\n\nimport Api from 'api';\n\nconst resetCommentAndError = { comment: null, error: null };\n\nconst initialState = {\n    selectedUser: null,\n    selectedPost: null,\n    comment: null,\n    error: null,\n    users: [],\n    posts: [],\n    comments: [],\n    isLoading: false,\n    isSending: false,\n};\n\nconst reducer = (state, next) => {\n    if (typeof next === 'function') {\n        return { ...state, ...next(state) };\n    }\n\n    return { ...state, ...next };\n};\n\nconst useForm = () => {\n    const [state, setState] = useReducer(reducer, initialState);\n\n    const { selectedUser, selectedPost, comment } = state;\n\n    const onUserChange = ({ target: { value } }) =>\n        setState({ selectedUser: value, ...resetCommentAndError });\n\n    const onPostChange = ({ target: { value } }) =>\n        setState(prev => ({\n            selectedPost: value === prev.selectedPost ? null : value,\n            ...resetCommentAndError,\n        }));\n\n    const onCommentChange = ({ target: { value } }) =>\n        setState({ comment: value, error: null });\n\n    const onCommentsUpdate = useCallback(\n        comment =>\n            setState(({ comments }) => ({ comments: [...comments, comment] })),\n        []\n    );\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (comment) {\n            const formDdata = {\n                user: selectedUser,\n                post: selectedPost,\n                comment: comment,\n            };\n\n            setState({ isSending: true });\n\n            Api.postForm(formDdata)\n                .then(() => setState({ isSending: false }))\n                .then(() => alert('Form sent'));\n        } else {\n            setState({ error: 'Comment missing' });\n        }\n    };\n\n    useEffect(() => {\n        Api.subscribeComments(onCommentsUpdate);\n\n        setState({ isLoading: true });\n\n        Promise.all([Api.getUsers(), Api.getPosts()]).then(([users, posts]) =>\n            setState({\n                isLoading: false,\n                users,\n                posts,\n            })\n        );\n\n        return () => Api.unsubscribeComments(onCommentsUpdate);\n    }, [onCommentsUpdate]);\n\n    return {\n        ...state,\n        onUserChange,\n        onPostChange,\n        onCommentChange,\n        onSubmit,\n    };\n};\n\nexport default useForm;\n","import { useEffect, useRef, useReducer } from 'react';\n\nconst widthUpdater = () => window.innerWidth;\n\nconst useWindowResize = callback => {\n    const [width, updateWidth] = useReducer(widthUpdater, window.innerWidth);\n    const latestCallback = useRef(callback);\n\n    // Add listener on window resize, clear listener on unmount\n    useEffect(() => {\n        window.addEventListener('resize', updateWidth);\n        return () => window.removeEventListener('resize', updateWidth);\n    }, []);\n\n    // Keep latestCallback updated with given callback\n    useEffect(() => {\n        latestCallback.current = callback;\n    }, [callback]);\n\n    // Call callback when width changes\n    useEffect(() => {\n        latestCallback && latestCallback.current(width);\n    }, [width]);\n};\n\nexport default useWindowResize;\n","import { useState, useCallback } from 'react';\n\nconst useEventTargetValue = initialValue => {\n    const [state, setState] = useState(initialValue);\n\n    const setValue = useCallback(event => {\n        const { target } = event || {};\n        const { value } = target || {};\n\n        setState(value);\n    }, []);\n\n    return [state, setValue];\n};\n\nexport default useEventTargetValue;\n","export { default as usePosts } from './usePosts';\nexport { default as useComments } from './useComments';\nexport { default as useForceRender } from './useForceRender';\nexport { default as useForm } from './useForm';\nexport { default as useWindowResize } from './useWindowResize';\nexport { default as useEventTargetValue } from './useEventTargetValue';\nexport { default as useIsMounted } from './useIsMounted';\nexport { default as useReducerOnMounted } from './useReducerOnMounted';\nexport { useStore } from './useStore';\n","import React from 'react';\n\nimport Link from 'components/Link';\n\nconst Main = () => (\n    <>\n        <h1>Hooks examples</h1>\n\n        <h2>\n            <Link href='https://github.com/AriPerkkio/hooks-examples'>\n                Source codes\n            </Link>\n        </h2>\n\n        <h3>Reading / Watching list</h3>\n        <ul>\n            <li>\n                <Link href='https://youtu.be/KJP1E-Y-xyo'>\n                    Getting Closure on React Hooks by Shawn Wang | JSConf.Asia\n                    2019\n                </Link>\n            </li>\n            <li>\n                <Link href='https://overreacted.io/a-complete-guide-to-useeffect'>\n                    overreacted.io/a-complete-guide-to-useeffect\n                </Link>\n            </li>\n            <li>\n                <Link href='https://github.com/testing-library/react-hooks-testing-library'>\n                    @testing-library/react-hooks-testing-library\n                </Link>\n            </li>\n        </ul>\n    </>\n);\n\nexport default Main;\n","import { lazy } from 'react';\n\nimport Main from './Main';\n\nexport default [\n    {\n        navigationName: 'useState',\n        path: '/local-state',\n        component: lazy(() => import('./LocalStateView')),\n    },\n    {\n        navigationName: 'useReducer',\n        path: '/use-reducer',\n        component: lazy(() => import('./ReducerView')),\n    },\n    {\n        navigationName: 'setState: Merge vs replace',\n        path: '/merge-vs-replace',\n        component: lazy(() => import('./MergeVsReplace')),\n    },\n    {\n        navigationName: 'useEffect',\n        path: '/use-effect',\n        component: lazy(() => import('./EffectView')),\n    },\n    {\n        navigationName: 'Performance: useMemo, useCallback',\n        path: '/performance',\n        component: lazy(() => import('./PerformanceView')),\n    },\n    {\n        navigationName: 'Context View',\n        path: '/context-view',\n        component: lazy(() => import('./ContextView')),\n    },\n    {\n        navigationName: 'Custom Hooks: reusable state logic vs HOC/renderProp',\n        path: '/reusable-state-logic',\n        component: lazy(() => import('./ReusableStateView')),\n    },\n    {\n        navigationName: 'Custom Hooks: Isolated state management',\n        path: '/isolated-state-management',\n        component: lazy(() => import('./IsolatedStateView')),\n    },\n    {\n        navigationName: 'Custom Hooks: Unit testing',\n        path: '/testing',\n        component: lazy(() => import('./TestingView')),\n    },\n    {\n        navigationName: 'Custom Hooks: global state',\n        path: '/global-state',\n        component: lazy(() => import('./GlobalStateView')),\n    },\n    {\n        navigationName: 'Extra: Custom hook examples',\n        path: '/custom-hook-examples',\n        component: lazy(() => import('./CustomHookExamplesView')),\n    },\n    {\n        navigationName: 'Main View',\n        path: '/*',\n        component: Main,\n    },\n];\n","import React, { useReducer } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Routes from 'views/Routes';\n\nconst BASE_CLASS = 'sidebar';\n\nconst Sidebar = () => {\n    const [open, toggle] = useReducer(s => !s, true);\n\n    return (\n        <aside className={BASE_CLASS}>\n            <input\n                checked={open}\n                type='checkbox'\n                onChange={toggle}\n                id={`${BASE_CLASS}-toggle`}\n                className={`${BASE_CLASS}-toggle`}\n            />\n            <label htmlFor={`${BASE_CLASS}-toggle`}>&nbsp;</label>\n\n            <nav className={`${BASE_CLASS}-navigation`}>\n                {Routes.map(({ path, navigationName }) => (\n                    <NavLink\n                        key={path}\n                        to={path}\n                        onClick={toggle}\n                        className={`${BASE_CLASS}-navigation-link`}>\n                        {navigationName}\n                    </NavLink>\n                ))}\n            </nav>\n        </aside>\n    );\n};\n\nexport default Sidebar;\n","import React, { Suspense } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Routes from 'views/Routes';\nimport Sidebar from 'components/Sidebar';\nimport CodeBlock, { CodeBlockProvider } from 'components/CodeBlock';\n\nconst App = () => (\n    <HashRouter>\n        <Sidebar />\n        <CodeBlockProvider>\n            <main className='content'>\n                <article className='content-main'>\n                    <Suspense fallback='Loading...'>\n                        <Switch>\n                            {Routes.map(props => (\n                                <Route key={props.path} {...props} />\n                            ))}\n                        </Switch>\n                    </Suspense>\n                </article>\n                <CodeBlock />\n            </main>\n        </CodeBlockProvider>\n    </HashRouter>\n);\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'core-js/features/string/repeat';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('app-root'));\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const UpdatedApp = require('./App').default;\n\n        ReactDOM.render(<UpdatedApp />, document.getElementById('app-root'));\n    });\n}\n","import React, { useReducer, useCallback, createContext } from 'react';\n\nexport const CodeBlockContext = createContext();\n\nconst RESET = 'RESET';\n\nconst reducer = (state, next) => {\n    if (next === RESET) {\n        return [];\n    }\n\n    if (state.indexOf(next) === -1) {\n        return [...state, next];\n    }\n\n    return state.filter(s => s !== next);\n};\n\nconst CodeBlockProvider = ({ children }) => {\n    const [codes, toggleCodes] = useReducer(reducer, []);\n    const resetCodes = useCallback(() => toggleCodes(RESET), []);\n\n    return (\n        <CodeBlockContext.Provider value={{ codes, toggleCodes, resetCodes }}>\n            {children}\n        </CodeBlockContext.Provider>\n    );\n};\n\nexport default CodeBlockProvider;\n","const REGEX_STRINGIFY_IMPORT = /\\nimport Stringify from 'components\\/Stringify';/g;\nconst REGEX_CODEBLOCKBUTTON_IMPORT = /\\nimport { CodeBlockButton } from 'components\\/CodeBlock';/g;\nconst REGEX_STRINGIFY = /\\n\\s*<Stringify(\\s|\\S)*>(\\s|\\S)*<\\/Stringify>/g;\nconst REGEX_CODEBLOCKBUTTON = /\\n\\s*<CodeBlockButton(\\s|\\w|[='/.])*>/g;\nconst REGEX_FRAGMENT = /(\\s*) (<>|<\\/>)/g;\nconst REGEX_EMPTY_DIV = /\\n\\s*<div>\\s*<\\/div>/g;\nconst REGEX_FRAGMENT_CONTENT = /<>(\\s|\\S)*<\\/>/gs;\nconst REGEX_INDENT = /( ){4}/g;\nconst REGEX_NEWLINE_INDENT = /\\n( ){4}/g;\nconst REGEX_CLOSING_BRACKET = /\\);/g;\nconst REGEX_PRETTIER_IGNORE = /\\n\\s*\\/\\/ prettier-ignore/g;\nconst REGEX_ESLINT_IGNORE = /\\n\\s*\\/\\/ eslint-disable-next-line/g;\nconst REGEX_DOUBLE_NEWLINES = /\\n\\n\\n/g;\n\nconst removePrettierAndEslintIgnoreComments = code =>\n    code.replace(REGEX_PRETTIER_IGNORE, '\\n').replace(REGEX_ESLINT_IGNORE, '');\n\nconst decreaseIndent = indent => code =>\n    code.replace(REGEX_INDENT, ' '.repeat(indent));\n\nconst decreaseNewlineIndent = code =>\n    code\n        .replace(REGEX_NEWLINE_INDENT, '\\n')\n        .replace(REGEX_CLOSING_BRACKET, '    );');\n\nconst removeStringify = code =>\n    code.replace(REGEX_STRINGIFY, '').replace(REGEX_STRINGIFY_IMPORT, '');\n\nconst removeFragment = code =>\n    code\n        .replace(REGEX_FRAGMENT_CONTENT, decreaseNewlineIndent)\n        .replace(REGEX_FRAGMENT, '');\n\nconst removeCodeBlockButton = code =>\n    code\n        .replace(REGEX_CODEBLOCKBUTTON, '')\n        .replace(REGEX_CODEBLOCKBUTTON_IMPORT, '');\n\nconst removeEmptyDivs = code => code.replace(REGEX_EMPTY_DIV, '');\n\nconst removeDoubleNewlines = code =>\n    code.replace(REGEX_DOUBLE_NEWLINES, '\\n\\n');\n\nconst formatCodes = (codes, options) => {\n    const formatters = [\n        options.hideStringify && removeStringify,\n        options.hideFragment && removeFragment,\n        options.hideCodeBlockBtn && removeCodeBlockButton,\n        decreaseIndent(options.indent),\n        removePrettierAndEslintIgnoreComments,\n\n        removeEmptyDivs,\n        removeDoubleNewlines,\n    ].filter(Boolean);\n\n    const format = code =>\n        formatters.reduce((c, formatter) => formatter(c), code);\n\n    return codes.map(format);\n};\n\nexport { formatCodes };\n","import React from 'react';\n\nconst BASE_CLASS = 'code-block-options';\n\nconst initialOptions = {\n    hideFragment: false,\n    hideStringify: false,\n    hideCodeBlockBtn: false,\n    fullScreen: false,\n    indent: 4,\n    fontSize: 16,\n};\n\nconst options = [\n    {\n        name: 'hideStringify',\n        label: 'Hide Stringify',\n        type: 'checkbox',\n    },\n    {\n        name: 'hideFragment',\n        label: 'Hide Fragment',\n        type: 'checkbox',\n    },\n    {\n        name: 'hideCodeBlockBtn',\n        label: 'Hide CodeblockButton',\n        type: 'checkbox',\n    },\n    {\n        name: 'fullScreen',\n        label: 'Full Screen',\n        type: 'checkbox',\n    },\n    {\n        name: 'indent',\n        label: 'Indent',\n        type: 'number',\n    },\n    {\n        name: 'fontSize',\n        label: 'Font Size',\n        type: 'number',\n    },\n];\n\nconst resolveValueKey = type => (type === 'checkbox' ? 'checked' : 'value');\n\nconst Option = ({ name, label, type, onChange, value }) => {\n    const props = {\n        id: name,\n        type: type,\n        onChange: e => onChange({ [name]: e.target[resolveValueKey(type)] }),\n        [resolveValueKey(type)]: value,\n    };\n\n    return (\n        <span>\n            <label htmlFor={name}>{label}</label>\n            <input {...props} />\n        </span>\n    );\n};\n\nconst CodeBlockOptions = ({ values, onChange, onReset }) => (\n    <div className={BASE_CLASS}>\n        <button onClick={onReset}>Close all</button>\n\n        {options.map(props => (\n            <Option\n                {...props}\n                key={props.name}\n                value={values[props.name]}\n                onChange={onChange}\n            />\n        ))}\n    </div>\n);\n\nexport default CodeBlockOptions;\nexport { initialOptions };\n","import React, { useContext, useReducer } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classNames from 'classnames';\n\nimport { CodeBlockContext } from './CodeBlockProvider';\nimport { formatCodes } from './utils';\nimport CodeBlockOptions, { initialOptions } from './CodeBlockOptions';\nimport { useWindowResize } from 'hooks';\n\nconst BASE_CLASS = 'code-block';\nconst mergeReducer = (state, next) => ({ ...state, ...next });\nconst resolveFontSize = windowWidth => ({\n    fontSize: windowWidth < 700 ? 12 : windowWidth < 1000 ? 14 : 16,\n});\n\nconst CodeBlock = () => {\n    const { codes, toggleCodes, resetCodes } = useContext(CodeBlockContext);\n    const [options, setOptions] = useReducer(mergeReducer, initialOptions);\n\n    const onReset = () => {\n        resetCodes();\n        setOptions(initialOptions);\n    };\n\n    useWindowResize(width => {\n        setOptions(resolveFontSize(width));\n\n        // Reset full screen when screen below 1200\n        if (options.fullScreen && width < 1200) {\n            setOptions({ fullScreen: false });\n        }\n    });\n\n    if (!codes.length) {\n        return null;\n    }\n\n    const formattedCodes = formatCodes(codes, options);\n\n    const wrapperClassNames = classNames(\n        `${BASE_CLASS}-wrapper`,\n        options.fullScreen && `${BASE_CLASS}-wrapper-full-screen`\n    );\n\n    const containerClassNames = classNames(\n        `${BASE_CLASS}-container`,\n        options.fullScreen && `${BASE_CLASS}-container-full-screen`\n    );\n\n    const contentClassNames = classNames(\n        `${BASE_CLASS}-content`,\n        options.fullScreen && `${BASE_CLASS}-content-full-screen`\n    );\n\n    return (\n        <article className={wrapperClassNames}>\n            <CodeBlockOptions\n                values={options}\n                onChange={setOptions}\n                onReset={onReset}\n            />\n\n            <div className={containerClassNames}>\n                {formattedCodes.map((formattedCode, key) => (\n                    <div key={key} className={contentClassNames}>\n                        <SyntaxHighlighter\n                            showLineNumbers\n                            key={key}\n                            language='jsx'\n                            style={okaidia}\n                            className={BASE_CLASS}\n                            customStyle={{\n                                fontSize: parseInt(options.fontSize),\n                            }}>\n                            {formattedCode}\n                        </SyntaxHighlighter>\n                        <button\n                            className={`${BASE_CLASS}-close`}\n                            onClick={() => toggleCodes(codes[key])}>\n                            X\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </article>\n    );\n};\n\nexport default CodeBlock;\n","import React, { useContext, useState, useEffect } from 'react';\n\nimport { CodeBlockContext } from './CodeBlockProvider';\nimport Button from 'components/common/Button';\n\n// Fetch source codes from local environment or repo - production build should never use local environment\nconst USE_LOCAL_SOURCE_CODES = true && process.env.NODE_ENV === 'development';\nconst URL = USE_LOCAL_SOURCE_CODES\n    ? '/source-code'\n    : 'https://raw.githubusercontent.com/AriPerkkio/hooks-examples/master/src';\n\nconst CodeBlockButton = ({ fileName, text, className }) => {\n    const [code, setCode] = useState();\n    const { toggleCodes, resetCodes } = useContext(CodeBlockContext);\n\n    const onClick = () => {\n        if (code) {\n            toggleCodes(code);\n        } else {\n            fetch(`${URL}/${fileName}`)\n                .then(response => response.text())\n                .then(resp => {\n                    setCode(resp);\n                    toggleCodes(resp);\n                });\n        }\n    };\n\n    // On unmount reset all selections in context\n    useEffect(() => resetCodes, [resetCodes]);\n\n    return (\n        <Button\n            className={`code-display-btn ${className || ''}`}\n            onClick={onClick}>\n            {text || 'Code'}\n        </Button>\n    );\n};\n\nexport default CodeBlockButton;\n","export { default } from './CodeBlock';\nexport { default as CodeBlockProvider } from './CodeBlockProvider';\nexport { default as CodeBlockButton } from './CodeBlockButton';\n","class Api {\n    baseUrl = 'https://jsonplaceholder.typicode.com';\n    subscribers = [];\n\n    constructor() {\n        this._startPollingComments();\n    }\n\n    async getComment(index) {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/comments/${index}`).then(r => r.json());\n    }\n\n    async getUsers() {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/users`).then(r => r.json());\n    }\n\n    async getUser(id) {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/users/${id}`).then(r => r.json());\n    }\n\n    async getPosts() {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/posts`).then(r => r.json());\n    }\n\n    async getPost(id) {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/posts/${id}`).then(r => r.json());\n    }\n\n    async postForm() {\n        return delay(2000);\n    }\n\n    subscribeComments(cb) {\n        this.subscribers.push(cb);\n    }\n\n    unsubscribeComments(cb) {\n        this.subscribers = this.subscribers.filter(\n            subscriber => subscriber !== cb\n        );\n    }\n\n    _startPollingComments() {\n        let postIndex = 1;\n\n        setInterval(async () => {\n            if (this.subscribers.length) {\n                const comment = await this.getComment(postIndex++);\n                this.subscribers.forEach(cb => cb(comment));\n            }\n        }, 2000);\n    }\n}\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport default new Api();\n","import React from 'react';\n\nimport Api from './Api';\nimport { useForceRender } from 'hooks';\n\nconst ApiSubscribers = () => {\n    useForceRender(1000);\n\n    return <h3>Api subscribers count: {Api.subscribers.length}</h3>;\n};\nexport default ApiSubscribers;\n","export { default } from './Api';\nexport { default as ApiSubscribers } from './ApiSubscribers';\n","import React, { useReducer } from 'react';\nimport classNames from 'classnames';\n\nconst Button = ({ className, onClick, ...props }) => {\n    const [toggled, toggle] = useReducer(t => !t, false);\n    const _onClick = (...args) => {\n        toggle();\n        onClick && onClick(...args);\n    };\n\n    return (\n        <button\n            {...props}\n            className={classNames(\n                'common-button',\n                className,\n                toggled && 'toggled'\n            )}\n            onClick={_onClick}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import { useReducer, useEffect } from 'react';\n\nconst createStore = () => {\n    let store = {};\n    const listeners = [];\n\n    const setStore = value => {\n        const updatedPart = typeof value === 'function' ? value(store) : value;\n\n        // Update store\n        const prevStore = { ...store };\n        store = { ...store, ...updatedPart };\n\n        // Re-render listening components\n        listeners.forEach(updateListener(prevStore, store));\n    };\n\n    const useStore = (options = {}) => {\n        const [, render] = useReducer(s => s + 1, 0);\n\n        // Add listener once\n        useEffect(() => {\n            const listener = {\n                render,\n                shouldComponentUpdate: options.shouldComponentUpdate,\n            };\n\n            listeners.push(listener);\n\n            // Remove when unmounted\n            return () => listeners.splice(listeners.indexOf(listener), 1);\n        }, [options]);\n\n        return [store, setStore];\n    };\n\n    return { useStore, listeners };\n};\n\nconst defaultCompare = () => true;\nconst updateListener = (prevStore, store) => listener => {\n    const { render, shouldComponentUpdate } = listener;\n\n    if ((shouldComponentUpdate || defaultCompare)(prevStore, store)) {\n        render();\n    }\n};\n\nconst { useStore, listeners } = createStore(); // Singleton usage for easier demo\nexport { useStore, listeners };\n"],"sourceRoot":""}