{"version":3,"sources":["api/Api.js","api/ApiSubscribers.js","api/index.js","utils/index.js","components/Link/Link.js","components/Link/index.js","hooks/usePosts.js","hooks/useComments.js","hooks/useForceRender.js","hooks/useForm.js","hooks/useWindowResize.js","hooks/useEventTargetValue.js","hooks/index.js","views/Main.js","views/Routes.js","components/Sidebar/Sidebar.js","App.js","index.js","components/CodeBlock/CodeBlockProvider.js","components/CodeBlock/utils.js","components/CodeBlock/CodeBlockOptions.js","components/CodeBlock/CodeBlock.js","components/CodeBlock/CodeBlockButton.js","components/CodeBlock/index.js","components/common/Button.js","hooks/useStore.js"],"names":["baseUrl","subscribers","this","_startPollingComments","index","delay","fetch","then","r","json","id","cb","push","filter","subscriber","postIndex","setInterval","a","length","getComment","comment","forEach","ApiSubscribers","useForceRender","Api","generateTextCallCounts","generateText","text","compose","fns","reduce","prevFn","nextFn","doImportantBusinessLogic","ms","Promise","resolve","setTimeout","Link","children","props","className","target","rel","initialState","posts","loading","error","reducer","state","next","usePosts","useReducer","setState","useEffect","getPosts","catch","newComment","useComments","comments","addComment","subscribeComments","unsubscribeComments","timeout","s","forceRender","timer","clearTimeout","resetCommentAndError","selectedUser","selectedPost","users","isLoading","isSending","useForm","onCommentsUpdate","all","getUsers","onUserChange","value","onPostChange","prev","onCommentChange","onSubmit","e","preventDefault","formDdata","user","post","postForm","alert","widthUpdater","window","innerWidth","useWindowResize","callback","width","updateWidth","latestCallback","useRef","addEventListener","removeEventListener","current","useEventTargetValue","initialValue","useState","useCallback","event","Main","href","navigationName","path","component","lazy","Sidebar","open","toggle","checked","type","onChange","htmlFor","Routes","map","key","to","onClick","App","CodeBlock","fallback","ReactDOM","render","document","getElementById","CodeBlockContext","createContext","indexOf","CodeBlockProvider","codes","toggleCodes","resetCodes","Provider","REGEX_STRINGIFY_IMPORT","REGEX_CODEBLOCKBUTTON_IMPORT","REGEX_STRINGIFY","REGEX_CODEBLOCKBUTTON","REGEX_FRAGMENT","REGEX_EMPTY_DIV","REGEX_FRAGMENT_CONTENT","REGEX_INDENT","REGEX_NEWLINE_INDENT","REGEX_CLOSING_BRACKET","REGEX_PRETTIER_IGNORE","REGEX_ESLINT_IGNORE","REGEX_DOUBLE_NEWLINES","REGEX_HIDE_LINE","removePrettierAndEslintIgnoreComments","code","replace","decreaseNewlineIndent","removeStringify","removeFragment","removeCodeBlockButton","removeEmptyDivs","removeDoubleNewlines","removeHiddenLines","initialOptions","hideFragment","hideStringify","hideCodeBlockBtn","fullScreen","indent","fontSize","options","name","label","resolveValueKey","Option","CodeBlockOptions","values","onReset","mergeReducer","useContext","setOptions","windowWidth","formattedCodes","formatters","repeat","Boolean","c","formatter","formatCodes","wrapperClassNames","classNames","containerClassNames","contentClassNames","formattedCode","showLineNumbers","language","style","okaidia","customStyle","parseInt","CodeBlockButton","fileName","setCode","Button","response","resp","t","toggled","updateListener","prevStore","store","listener","shouldComponentUpdate","listeners","setStore","updatedPart","useStore","splice","createStore"],"mappings":"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","file":"static/js/main.ac6b3a62.chunk.js","sourcesContent":["import { delay } from 'utils';\n\nclass Api {\n    baseUrl = 'https://jsonplaceholder.typicode.com';\n    subscribers = [];\n\n    constructor() {\n        this._startPollingComments();\n    }\n\n    async getComment(index) {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/comments/${index}`).then(r => r.json());\n    }\n\n    async getUsers() {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/users`).then(r => r.json());\n    }\n\n    async getUser(id) {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/users/${id}`).then(r => r.json());\n    }\n\n    async getUsersPosts(id) {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/users/${id}/posts`).then(r => r.json());\n    }\n\n    async getUsersComments(id) {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/users/${id}/comments`).then(r =>\n            r.json()\n        );\n    }\n\n    async getPosts() {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/posts`).then(r => r.json());\n    }\n\n    async getPost(id) {\n        await delay(2000);\n\n        return fetch(`${this.baseUrl}/posts/${id}`).then(r => r.json());\n    }\n\n    async postForm() {\n        return delay(2000);\n    }\n\n    subscribeComments(cb) {\n        this.subscribers.push(cb);\n    }\n\n    unsubscribeComments(cb) {\n        this.subscribers = this.subscribers.filter(\n            subscriber => subscriber !== cb\n        );\n    }\n\n    _startPollingComments() {\n        let postIndex = 1;\n\n        setInterval(async () => {\n            if (this.subscribers.length) {\n                const comment = await this.getComment(postIndex++);\n                this.subscribers.forEach(cb => cb(comment));\n            }\n        }, 2000);\n    }\n}\n\nexport default new Api();\n","import React from 'react';\n\nimport Api from './Api';\nimport { useForceRender } from 'hooks';\n\nconst ApiSubscribers = () => {\n    useForceRender(500);\n\n    return <h3>Api subscribers count: {Api.subscribers.length}</h3>;\n};\nexport default ApiSubscribers;\n","export { default } from './Api';\nexport { default as ApiSubscribers } from './ApiSubscribers';\n","const generateTextCallCounts = {};\n\nconst generateText = (text, id) => {\n    generateTextCallCounts[id] = (generateTextCallCounts[id] || 0) + 1;\n    return `Generated: ${text} - ${id}`;\n};\n\nconst compose = (...fns) =>\n    fns.reduce((prevFn, nextFn) => (...args) => nextFn(prevFn(...args)));\n\n// Mock function for examples \"business context\"\nconst doImportantBusinessLogic = () => {};\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nexport {\n    generateText,\n    generateTextCallCounts,\n    compose,\n    delay,\n    doImportantBusinessLogic,\n};\n","import React from 'react';\n\nconst Link = ({ children, ...props }) => (\n    <a {...props} className='link' target='_blank' rel='noopener noreferrer'>\n        {children}\n    </a>\n);\n\nexport default Link;\n","export { default } from './Link';\n","import { useReducer, useEffect } from 'react';\n\nimport Api from 'api';\n\nconst initialState = {\n    posts: [],\n    loading: false,\n    error: false,\n};\n\nconst reducer = (state, next) => ({ ...state, ...next });\n\nconst usePosts = () => {\n    const [state, setState] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        setState({ loading: true });\n\n        Api.getPosts()\n            .then(posts => setState({ posts, loading: false }))\n            .catch(() => setState({ error: true, loading: false }));\n    }, []);\n\n    return state;\n};\n\nexport default usePosts;\n","import { useReducer, useEffect } from 'react';\n\nimport Api from 'api';\n\nconst reducer = (state, newComment) => [...state, newComment];\n\nconst useComments = () => {\n    const [comments, addComment] = useReducer(reducer, []);\n\n    useEffect(() => {\n        Api.subscribeComments(addComment);\n\n        return () => Api.unsubscribeComments(addComment);\n    }, []);\n\n    return comments;\n};\n\nexport default useComments;\n","import { useEffect, useReducer } from 'react';\n\nconst useForceRender = (timeout = 1000) => {\n    const [, forceRender] = useReducer(s => s + 1, 0);\n\n    useEffect(() => {\n        const timer = setInterval(forceRender, timeout);\n        return () => clearTimeout(timer);\n    }, [timeout]);\n};\n\nexport default useForceRender;\n","import { useReducer, useEffect } from 'react';\n\nimport Api from 'api';\n\nconst resetCommentAndError = { comment: null, error: null };\n\nconst initialState = {\n    selectedUser: null,\n    selectedPost: null,\n    comment: null,\n    error: null,\n    users: [],\n    posts: [],\n    comments: [],\n    isLoading: false,\n    isSending: false,\n};\n\nconst reducer = (state, next) => {\n    if (typeof next === 'function') {\n        return { ...state, ...next(state) };\n    }\n\n    return { ...state, ...next };\n};\n\nconst useForm = () => {\n    const [state, setState] = useReducer(reducer, initialState);\n\n    const { selectedUser, selectedPost, comment } = state;\n\n    const onUserChange = ({ target: { value } }) =>\n        setState({ selectedUser: value, ...resetCommentAndError });\n\n    const onPostChange = ({ target: { value } }) =>\n        setState(prev => ({\n            selectedPost: value === prev.selectedPost ? null : value,\n            ...resetCommentAndError,\n        }));\n\n    const onCommentChange = ({ target: { value } }) =>\n        setState({ comment: value, error: null });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (comment) {\n            const formDdata = {\n                user: selectedUser,\n                post: selectedPost,\n                comment: comment,\n            };\n\n            setState({ isSending: true });\n\n            Api.postForm(formDdata)\n                .then(() => setState({ isSending: false }))\n                .then(() => alert('Form sent'));\n        } else {\n            setState({ error: 'Comment missing' });\n        }\n    };\n\n    useEffect(() => {\n        const onCommentsUpdate = comment =>\n            setState(({ comments }) => ({ comments: [...comments, comment] }));\n\n        Api.subscribeComments(onCommentsUpdate);\n\n        setState({ isLoading: true });\n\n        Promise.all([Api.getUsers(), Api.getPosts()]).then(([users, posts]) =>\n            setState({\n                isLoading: false,\n                users,\n                posts,\n            })\n        );\n\n        return () => Api.unsubscribeComments(onCommentsUpdate);\n    }, []);\n\n    return {\n        ...state,\n        onUserChange,\n        onPostChange,\n        onCommentChange,\n        onSubmit,\n    };\n};\n\nexport default useForm;\n","import { useEffect, useRef, useReducer } from 'react';\n\nconst widthUpdater = () => window.innerWidth;\n\nconst useWindowResize = callback => {\n    const [width, updateWidth] = useReducer(widthUpdater, window.innerWidth);\n    const latestCallback = useRef(callback);\n\n    // Add listener on window resize, clear listener on unmount\n    useEffect(() => {\n        window.addEventListener('resize', updateWidth);\n        return () => window.removeEventListener('resize', updateWidth);\n    }, []);\n\n    // Keep latestCallback updated with given callback\n    useEffect(() => {\n        latestCallback.current = callback;\n    }, [callback]);\n\n    // Call callback when width changes\n    useEffect(() => {\n        latestCallback && latestCallback.current(width);\n    }, [width]);\n};\n\nexport default useWindowResize;\n","import { useState, useCallback } from 'react';\n\nconst useEventTargetValue = initialValue => {\n    const [state, setState] = useState(initialValue);\n\n    const setValue = useCallback(event => {\n        const { target } = event || {};\n        const { value } = target || {};\n\n        setState(value);\n    }, []);\n\n    return [state, setValue];\n};\n\nexport default useEventTargetValue;\n","export { default as usePosts } from './usePosts';\nexport { default as useComments } from './useComments';\nexport { default as useForceRender } from './useForceRender';\nexport { default as useForm } from './useForm';\nexport { default as useWindowResize } from './useWindowResize';\nexport { default as useEventTargetValue } from './useEventTargetValue';\nexport { default as useIsMounted } from './useIsMounted';\nexport { default as useReducerOnMounted } from './useReducerOnMounted';\nexport { useStore } from './useStore';\n","import React from 'react';\n\nimport Link from 'components/Link';\n\nconst Main = () => (\n    <>\n        <h1>Hooks examples</h1>\n\n        <h2>\n            <Link href='https://github.com/AriPerkkio/hooks-examples'>\n                Source codes\n            </Link>\n        </h2>\n\n        <h3>Reading / Watching list</h3>\n        <ul>\n            <li>\n                <Link href='https://youtu.be/KJP1E-Y-xyo'>\n                    Getting Closure on React Hooks by Shawn Wang | JSConf.Asia\n                    2019\n                </Link>\n            </li>\n            <li>\n                <Link href='https://overreacted.io/a-complete-guide-to-useeffect'>\n                    overreacted.io/a-complete-guide-to-useeffect\n                </Link>\n            </li>\n            <li>\n                <Link href='https://github.com/testing-library/react-hooks-testing-library'>\n                    @testing-library/react-hooks-testing-library\n                </Link>\n            </li>\n            <li>\n                <Link href='https://github.com/reactjs/rfcs/pull/119'>\n                    RFC: useContextSelector\n                </Link>\n            </li>\n        </ul>\n    </>\n);\n\nexport default Main;\n","import { lazy } from 'react';\n\nimport Main from './Main';\n\nexport default [\n    {\n        navigationName: 'useState',\n        path: '/local-state',\n        component: lazy(() => import('./LocalStateView')),\n    },\n    {\n        navigationName: 'useReducer',\n        path: '/use-reducer',\n        component: lazy(() => import('./ReducerView')),\n    },\n    {\n        navigationName: 'setState: Merge vs replace',\n        path: '/merge-vs-replace',\n        component: lazy(() => import('./MergeVsReplace')),\n    },\n    {\n        navigationName: 'useEffect',\n        path: '/use-effect',\n        component: lazy(() => import('./EffectView')),\n    },\n    {\n        navigationName: 'useMemo, useCallback, useRef',\n        path: '/performance',\n        component: lazy(() => import('./PerformanceView')),\n    },\n    {\n        navigationName: 'useContext',\n        path: '/context-view',\n        component: lazy(() => import('./ContextView')),\n    },\n    {\n        navigationName: 'Custom Hooks: reusable state logic vs HOC/renderProp',\n        path: '/reusable-state-logic',\n        component: lazy(() => import('./ReusableStateView')),\n    },\n    {\n        navigationName: 'Custom Hooks: Isolated state management',\n        path: '/isolated-state-management',\n        component: lazy(() => import('./IsolatedStateView')),\n    },\n    {\n        navigationName: 'Custom Hooks: Unit testing',\n        path: '/testing',\n        component: lazy(() => import('./TestingView')),\n    },\n    {\n        navigationName: 'Custom Hooks: global state',\n        path: '/global-state',\n        component: lazy(() => import('./GlobalStateView')),\n    },\n    {\n        navigationName: 'Extra: Custom hook examples',\n        path: '/custom-hook-examples',\n        component: lazy(() => import('./CustomHookExamplesView')),\n    },\n    {\n        navigationName: 'Main View',\n        path: '/*',\n        component: Main,\n    },\n];\n","import React, { useReducer } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport Routes from 'views/Routes';\n\nconst BASE_CLASS = 'sidebar';\n\nconst Sidebar = () => {\n    const [open, toggle] = useReducer(s => !s, true);\n\n    return (\n        <aside className={BASE_CLASS}>\n            <input\n                checked={open}\n                type='checkbox'\n                onChange={toggle}\n                id={`${BASE_CLASS}-toggle`}\n                className={`${BASE_CLASS}-toggle`}\n            />\n            <label htmlFor={`${BASE_CLASS}-toggle`}>&nbsp;</label>\n\n            <nav className={`${BASE_CLASS}-navigation`}>\n                {Routes.map(({ path, navigationName }) => (\n                    <NavLink\n                        key={path}\n                        to={path}\n                        onClick={toggle}\n                        className={`${BASE_CLASS}-navigation-link`}>\n                        {navigationName}\n                    </NavLink>\n                ))}\n            </nav>\n        </aside>\n    );\n};\n\nexport default Sidebar;\n","import React, { Suspense } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nimport Routes from 'views/Routes';\nimport Sidebar from 'components/Sidebar';\nimport CodeBlock, { CodeBlockProvider } from 'components/CodeBlock';\n\nconst App = () => (\n    <HashRouter>\n        <Sidebar />\n        <CodeBlockProvider>\n            <main className='content'>\n                <article className='content-main'>\n                    <Suspense fallback='Loading...'>\n                        <Switch>\n                            {Routes.map(props => (\n                                <Route key={props.path} {...props} />\n                            ))}\n                        </Switch>\n                    </Suspense>\n                </article>\n                <CodeBlock />\n            </main>\n        </CodeBlockProvider>\n    </HashRouter>\n);\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'core-js/features/string/repeat';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('app-root'));\n\nif (module.hot) {\n    module.hot.accept('./App', () => {\n        const UpdatedApp = require('./App').default;\n\n        ReactDOM.render(<UpdatedApp />, document.getElementById('app-root'));\n    });\n}\n","import React, { useReducer, useCallback, createContext } from 'react';\n\nexport const CodeBlockContext = createContext();\n\nconst RESET = 'RESET';\n\nconst reducer = (state, next) => {\n    if (next === RESET) {\n        return [];\n    }\n\n    if (state.indexOf(next) === -1) {\n        return [...state, next];\n    }\n\n    return state.filter(s => s !== next);\n};\n\nconst CodeBlockProvider = ({ children }) => {\n    const [codes, toggleCodes] = useReducer(reducer, []);\n    const resetCodes = useCallback(() => toggleCodes(RESET), []);\n\n    return (\n        <CodeBlockContext.Provider value={{ codes, toggleCodes, resetCodes }}>\n            {children}\n        </CodeBlockContext.Provider>\n    );\n};\n\nexport default CodeBlockProvider;\n","const REGEX_STRINGIFY_IMPORT = /\\nimport Stringify from 'components\\/Stringify';/g;\nconst REGEX_CODEBLOCKBUTTON_IMPORT = /\\nimport { CodeBlockButton } from 'components\\/CodeBlock';/g;\nconst REGEX_STRINGIFY = /\\n\\s*<Stringify(\\s|\\S)*>(\\s|\\S)*<\\/Stringify>/g;\nconst REGEX_CODEBLOCKBUTTON = /\\n\\s*<CodeBlockButton(\\s|\\w|[='/.])*>/g;\nconst REGEX_FRAGMENT = /(\\s*) (<>|<\\/>)/g;\nconst REGEX_EMPTY_DIV = /\\n\\s*<div>\\s*<\\/div>/g;\nconst REGEX_FRAGMENT_CONTENT = /<>(\\s|\\S)*<\\/>/gs;\nconst REGEX_INDENT = /( ){4}/g;\nconst REGEX_NEWLINE_INDENT = /\\n( ){4}/g;\nconst REGEX_CLOSING_BRACKET = /\\);/g;\nconst REGEX_PRETTIER_IGNORE = /\\n\\s*\\/\\/ prettier-ignore/g;\nconst REGEX_ESLINT_IGNORE = /\\n\\s*\\/\\/ eslint-disable-next-line/g;\nconst REGEX_DOUBLE_NEWLINES = /\\n\\n\\n/g;\nconst REGEX_HIDE_LINE = /\\n( |\\S)*\\/\\/ hide-line/;\n\nconst removePrettierAndEslintIgnoreComments = code =>\n    code.replace(REGEX_PRETTIER_IGNORE, '\\n').replace(REGEX_ESLINT_IGNORE, '');\n\nconst decreaseIndent = indent => code =>\n    code.replace(REGEX_INDENT, ' '.repeat(indent));\n\nconst decreaseNewlineIndent = code =>\n    code\n        .replace(REGEX_NEWLINE_INDENT, '\\n')\n        .replace(REGEX_CLOSING_BRACKET, '    );');\n\nconst removeStringify = code =>\n    code.replace(REGEX_STRINGIFY, '').replace(REGEX_STRINGIFY_IMPORT, '');\n\nconst removeFragment = code =>\n    code\n        .replace(REGEX_FRAGMENT_CONTENT, decreaseNewlineIndent)\n        .replace(REGEX_FRAGMENT, '');\n\nconst removeCodeBlockButton = code =>\n    code\n        .replace(REGEX_CODEBLOCKBUTTON, '')\n        .replace(REGEX_CODEBLOCKBUTTON_IMPORT, '');\n\nconst removeEmptyDivs = code => code.replace(REGEX_EMPTY_DIV, '');\n\nconst removeDoubleNewlines = code =>\n    code.replace(REGEX_DOUBLE_NEWLINES, '\\n\\n');\n\nconst removeHiddenLines = code => code.replace(REGEX_HIDE_LINE, '');\n\nconst formatCodes = (codes, options) => {\n    const formatters = [\n        options.hideStringify && removeStringify,\n        options.hideFragment && removeFragment,\n        options.hideCodeBlockBtn && removeCodeBlockButton,\n        decreaseIndent(options.indent),\n        removePrettierAndEslintIgnoreComments,\n        removeEmptyDivs,\n        removeDoubleNewlines,\n        removeHiddenLines,\n    ].filter(Boolean);\n\n    const format = code =>\n        formatters.reduce((c, formatter) => formatter(c), code);\n\n    return codes.map(format);\n};\n\nexport { formatCodes };\n","import React from 'react';\n\nconst BASE_CLASS = 'code-block-options';\n\nconst initialOptions = {\n    hideFragment: false,\n    hideStringify: false,\n    hideCodeBlockBtn: true,\n    fullScreen: false,\n    indent: 4,\n    fontSize: 16,\n};\n\nconst options = [\n    {\n        name: 'hideStringify',\n        label: 'Hide Stringify',\n        type: 'checkbox',\n    },\n    {\n        name: 'hideFragment',\n        label: 'Hide Fragment',\n        type: 'checkbox',\n    },\n    {\n        name: 'hideCodeBlockBtn',\n        label: 'Hide CodeblockButton',\n        type: 'checkbox',\n    },\n    {\n        name: 'fullScreen',\n        label: 'Full Screen',\n        type: 'checkbox',\n    },\n    {\n        name: 'indent',\n        label: 'Indent',\n        type: 'number',\n    },\n    {\n        name: 'fontSize',\n        label: 'Font Size',\n        type: 'number',\n    },\n];\n\nconst resolveValueKey = type => (type === 'checkbox' ? 'checked' : 'value');\n\nconst Option = ({ name, label, type, onChange, value }) => {\n    const props = {\n        id: name,\n        type: type,\n        onChange: e => onChange({ [name]: e.target[resolveValueKey(type)] }),\n        [resolveValueKey(type)]: value,\n    };\n\n    return (\n        <span>\n            <label htmlFor={name}>{label}</label>\n            <input {...props} />\n        </span>\n    );\n};\n\nconst CodeBlockOptions = ({ values, onChange, onReset }) => (\n    <div className={BASE_CLASS}>\n        <button onClick={onReset}>Close all</button>\n\n        {options.map(props => (\n            <Option\n                {...props}\n                key={props.name}\n                value={values[props.name]}\n                onChange={onChange}\n            />\n        ))}\n    </div>\n);\n\nexport default CodeBlockOptions;\nexport { initialOptions };\n","import React, { useContext, useReducer } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport { okaidia } from 'react-syntax-highlighter/dist/esm/styles/prism';\nimport classNames from 'classnames';\n\nimport { CodeBlockContext } from './CodeBlockProvider';\nimport { formatCodes } from './utils';\nimport CodeBlockOptions, { initialOptions } from './CodeBlockOptions';\nimport { useWindowResize } from 'hooks';\n\nconst BASE_CLASS = 'code-block';\nconst mergeReducer = (state, next) => ({ ...state, ...next });\nconst resolveFontSize = windowWidth => ({\n    fontSize: windowWidth < 700 ? 12 : windowWidth < 1000 ? 14 : 16,\n});\n\nconst CodeBlock = () => {\n    const { codes, toggleCodes, resetCodes } = useContext(CodeBlockContext);\n    const [options, setOptions] = useReducer(mergeReducer, initialOptions);\n\n    const onReset = () => {\n        resetCodes();\n        setOptions(initialOptions);\n    };\n\n    useWindowResize(width => {\n        setOptions(resolveFontSize(width));\n\n        // Reset full screen when screen below 1200\n        if (options.fullScreen && width < 1200) {\n            setOptions({ fullScreen: false });\n        }\n    });\n\n    if (!codes.length) {\n        return null;\n    }\n\n    const formattedCodes = formatCodes(codes, options);\n\n    const wrapperClassNames = classNames(\n        `${BASE_CLASS}-wrapper`,\n        options.fullScreen && `${BASE_CLASS}-wrapper-full-screen`\n    );\n\n    const containerClassNames = classNames(\n        `${BASE_CLASS}-container`,\n        options.fullScreen && `${BASE_CLASS}-container-full-screen`\n    );\n\n    const contentClassNames = classNames(\n        `${BASE_CLASS}-content`,\n        options.fullScreen && `${BASE_CLASS}-content-full-screen`\n    );\n\n    return (\n        <article className={wrapperClassNames}>\n            <CodeBlockOptions\n                values={options}\n                onChange={setOptions}\n                onReset={onReset}\n            />\n\n            <div className={containerClassNames}>\n                {formattedCodes.map((formattedCode, key) => (\n                    <div key={key} className={contentClassNames}>\n                        <SyntaxHighlighter\n                            showLineNumbers\n                            key={key}\n                            language='jsx'\n                            style={okaidia}\n                            className={BASE_CLASS}\n                            customStyle={{\n                                fontSize: parseInt(options.fontSize),\n                            }}>\n                            {formattedCode}\n                        </SyntaxHighlighter>\n\n                        <button\n                            className={`${BASE_CLASS}-close`}\n                            onClick={() => toggleCodes(codes[key])}>\n                            X\n                        </button>\n                    </div>\n                ))}\n            </div>\n        </article>\n    );\n};\n\nexport default CodeBlock;\n","import React, { useContext, useState, useEffect } from 'react';\n\nimport { CodeBlockContext } from './CodeBlockProvider';\nimport Button from 'components/common/Button';\n\n// Fetch source codes from local environment or repo - production build should never use local environment\nconst USE_LOCAL_SOURCE_CODES = true && process.env.NODE_ENV === 'development';\nconst URL = USE_LOCAL_SOURCE_CODES\n    ? '/source-code'\n    : 'https://raw.githubusercontent.com/AriPerkkio/hooks-examples/master/src';\n\nconst CodeBlockButton = ({ fileName, text, className }) => {\n    const [code, setCode] = useState();\n    const { toggleCodes, resetCodes } = useContext(CodeBlockContext);\n\n    const onClick = () => {\n        if (code) {\n            toggleCodes(code);\n        } else {\n            fetch(`${URL}/${fileName}`)\n                .then(response => response.text())\n                .then(resp => {\n                    setCode(resp);\n                    toggleCodes(resp);\n                });\n        }\n    };\n\n    // On unmount reset all selections in context\n    useEffect(() => resetCodes, [resetCodes]);\n\n    return (\n        <Button\n            className={`code-display-btn ${className || ''}`}\n            onClick={onClick}>\n            {text || 'Code'}\n        </Button>\n    );\n};\n\nexport default CodeBlockButton;\n","export { default } from './CodeBlock';\nexport { default as CodeBlockProvider } from './CodeBlockProvider';\nexport { default as CodeBlockButton } from './CodeBlockButton';\n","import React, { useReducer } from 'react';\nimport classNames from 'classnames';\n\nconst Button = ({ className, onClick, ...props }) => {\n    const [toggled, toggle] = useReducer(t => !t, false);\n    const _onClick = (...args) => {\n        toggle();\n        onClick && onClick(...args);\n    };\n\n    return (\n        <button\n            {...props}\n            className={classNames(\n                'common-button',\n                className,\n                toggled && 'toggled'\n            )}\n            onClick={_onClick}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n","import { useReducer, useEffect } from 'react';\n\nconst createStore = () => {\n    let store = {};\n    const listeners = [];\n\n    const setStore = value => {\n        const updatedPart = typeof value === 'function' ? value(store) : value;\n\n        // Update store\n        const prevStore = { ...store };\n        store = { ...store, ...updatedPart };\n\n        // Re-render listening components\n        listeners.forEach(updateListener(prevStore, store));\n    };\n\n    const useStore = options => {\n        const [, render] = useReducer(s => !s, true);\n\n        useEffect(() => {\n            const { shouldComponentUpdate } = options || {};\n            const listener = { render, shouldComponentUpdate };\n\n            listeners.push(listener);\n\n            return () => listeners.splice(listeners.indexOf(listener), 1);\n        }, [options]);\n\n        return [store, setStore];\n    };\n\n    return { useStore, listeners };\n};\n\nconst defaultCompare = () => true;\nconst updateListener = (prevStore, store) => listener => {\n    const { render, shouldComponentUpdate } = listener;\n\n    if ((shouldComponentUpdate || defaultCompare)(prevStore, store)) {\n        render();\n    }\n};\n\nconst { useStore, listeners } = createStore(); // Singleton usage for easier demo\nexport { useStore, listeners };\n"],"sourceRoot":""}