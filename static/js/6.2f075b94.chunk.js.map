{"version":3,"sources":["components/Stringify/Stringify.js","components/Stringify/index.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","components/Input/InputWithComponents.js","components/Input/InputWithHooks.js","components/Input/InputWithReducer.js","components/Input/InputWithStore.js","components/Input/InputWithShouldUpdate.js","components/Input/InputsWithResizer.js","components/Input/InputWithEventTarget.js","components/Input/InputWithPropsDependencies.js","components/Input/InputWithReducerAndProps.js","components/Input/index.js","components/RenderCountText/RenderCountText.js","components/RenderCountText/RenderCountWithUseCallback.js","components/RenderCountText/RenderCountWithUseMemo.js","components/RenderCountText/RenderCountWithClass.js","components/RenderCountText/RenderCountWithRef.js","views/PerformanceView.js"],"names":["Stringify","_ref","children","indent","className","react_default","a","createElement","concat","JSON","stringify","__webpack_require__","d","__webpack_exports__","components_Stringify_Stringify","_getPrototypeOf","o","Object","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","obj","Symbol","iterator","constructor","prototype","_typeof","_possibleConstructorReturn","self","call","ReferenceError","_assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass","TypeError","create","value","writable","configurable","InputWithComponent","state","onChange","target","_this","setState","Fragment","type","this","Component","InputWithHook","_useState","useState","_useState2","slicedToArray","setValue","reducer","action","InputWithReducer","_useReducer","useReducer","_useReducer2","dispatch","Button","onClick","memo","id","_useStore","useStore","_useStore2","prevState","defineProperty","shouldComponentUpdate","newState","three","InputsWithResizer","displayMode","setDisplayMode","useWindowResize","width","href","InputWithEventTarget","_useEventTargetValue","useEventTargetValue","_useEventTargetValue2","Input","_useReducer3","s","_useReducer4","enabled","toggle","useEffect","count","increase","InputWithPropsDependencies_Input","_len","arguments","length","args","Array","_key","doImportantBusinessLogic","InputWithReducerAndProps","userId","_ref2","payload","objectSpread","loading","posts","comments","thunkDispatch","_ref3","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","then","r","abrupt","stop","_x","apply","Api","getUsersPosts","getUsersComments","InputWithComponents","InputWithHooks","Input_InputWithReducer","Input_InputWithStore","Input_InputWithShouldUpdate","Input_InputsWithResizer","Input_InputWithEventTarget","InputWithPropsDependencies","Input_InputWithReducerAndProps","renderCounts","RenderCountText","text","RenderCountWithUseCallback","memoizedCallback","useCallback","alert","RenderCountText_RenderCountText","RenderCountWithUseMemo","generateText","useMemo","generateTextCallCounts","RenderCountWithClass","props","RenderCountWithUseRef","latestText","useRef","current","PerformanceView","classText","setClassText","_useState3","_useState4","cbText","setCbText","_useState5","_useState6","cbRefText","setCbRefText","_useState7","_useState8","memoText","setMemoText","memoCbMounted","toggleMemoCbMount","useForceRender","CodeBlock","fileName","RenderCountText_RenderCountWithClass","RenderCountText_RenderCountWithUseCallback","RenderCountWithRef","_ref4","RenderCountText_RenderCountWithUseMemo"],"mappings":"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","file":"static/js/6.2f075b94.chunk.js","sourcesContent":["import React from 'react';\n\nconst Stringify = ({ children, indent, className }) => (\n    <pre className={`stringify ${className || ''}`}>\n        {JSON.stringify(children, null, indent)}\n    </pre>\n);\n\nexport default Stringify;\n","export { default } from './Stringify';\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import React, { Component } from 'react';\n\nimport Stringify from 'components/Stringify';\n\nclass InputWithComponent extends Component {\n    state = { value: 'Initial Value' };\n\n    onChange = ({ target: { value } }) => this.setState({ value });\n\n    render() {\n        return (\n            <>\n                <input\n                    type='text'\n                    value={this.state.value}\n                    onChange={this.onChange}\n                />\n                <Stringify>{this.state}</Stringify>\n            </>\n        );\n    }\n}\n\nexport default InputWithComponent;\n","import React, { useState } from 'react';\n\nimport Stringify from 'components/Stringify';\n\nconst InputWithHook = () => {\n    const [value, setValue] = useState('Initial Value');\n    const onChange = ({ target: { value } }) => setValue(value);\n\n    return (\n        <>\n            <input type='text' value={value} onChange={onChange} />\n            <Stringify>{{ value }}</Stringify>\n        </>\n    );\n};\n\nexport default InputWithHook;\n","import React, { useReducer } from 'react';\n\nimport Stringify from 'components/Stringify';\nimport Button from 'components/common/Button';\n\nconst initialState = 0;\nconst reducer = (state, action) => {\n    const { type, value } = action;\n\n    switch (type) {\n        case 'ADD':\n            return state + value;\n        case 'MINUS':\n            return state - value;\n        case 'MULTIPLY':\n            return state * value;\n        default:\n            return state;\n    }\n};\n\nconst InputWithReducer = () => {\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    return (\n        <>\n            <Button onClick={() => dispatch({ type: 'ADD', value: 15 })}>\n                ADD 15\n            </Button>\n\n            <Button onClick={() => dispatch({ type: 'MINUS', value: 23 })}>\n                MINUS 23\n            </Button>\n\n            <Button onClick={() => dispatch({ type: 'MULTIPLY', value: 3 })}>\n                MULTIPLY 3\n            </Button>\n\n            <Stringify>{state}</Stringify>\n        </>\n    );\n};\n\nexport default InputWithReducer;\n","import React, { memo } from 'react';\n\nimport Stringify from 'components/Stringify';\nimport Button from 'components/common/Button';\nimport { useStore } from 'hooks';\n\nconst InputWithStore = ({ id }) => {\n    const [state, setState] = useStore();\n    const onClick = () => setState(prevState => ({ [id]: !prevState[id] }));\n\n    return (\n        <>\n            <Button onClick={onClick}>setState</Button>\n            <Stringify>{state}</Stringify>\n        </>\n    );\n};\n\nexport default memo(InputWithStore);\n","import React, { memo } from 'react';\n\nimport Stringify from 'components/Stringify';\nimport Button from 'components/common/Button';\nimport { useStore } from 'hooks';\n\n// Update only when state.three updates\nconst shouldComponentUpdate = (prevState, newState) =>\n    prevState.three !== newState.three;\n\nconst InputWithShouldUpdate = ({ id }) => {\n    const [state, setState] = useStore({ shouldComponentUpdate });\n    const onClick = () => setState(prevState => ({ [id]: !prevState[id] }));\n\n    return (\n        <>\n            <Button onClick={onClick}>setState</Button>\n            <Stringify>{state}</Stringify>\n        </>\n    );\n};\n\nexport default memo(InputWithShouldUpdate);\n","import React, { useState } from 'react';\n\nimport { useWindowResize } from 'hooks';\n\nconst InputsWithResizer = () => {\n    const [displayMode, setDisplayMode] = useState('medium');\n\n    // No need to memoize callback\n    useWindowResize(width => setDisplayMode(width > 1400 ? 'large' : 'medium'));\n\n    return (\n        <nav className='sidebar-navigation'>\n            <a href='#front-page' className='sidebar-navigation-link'>\n                Company ABC\n            </a>\n\n            {/* Prevent forwarding mobile users to dashboard */}\n            {displayMode === 'large' && (\n                <a href='#dashboard' className='sidebar-navigation-link'>\n                    Dashboard\n                </a>\n            )}\n\n            <a href='#contact' className='sidebar-navigation-link'>\n                Contact us\n            </a>\n            <a href='#about' className='sidebar-navigation-link'>\n                About us\n            </a>\n        </nav>\n    );\n};\n\nexport default InputsWithResizer;\n","import React from 'react';\n\nimport Stringify from 'components/Stringify';\nimport { useEventTargetValue } from 'hooks';\n\nconst InputWithEventTarget = () => {\n    const [value, onChange] = useEventTargetValue('Initial value');\n\n    return (\n        <>\n            <input\n                type='text'\n                className='common-input block'\n                value={value}\n                onChange={onChange}\n            />\n            <Stringify>{value}</Stringify>\n        </>\n    );\n};\n\nexport default InputWithEventTarget;\n","import React, { memo, useReducer, useEffect } from 'react';\n\nimport Button from 'components/common/Button';\nimport { doImportantBusinessLogic } from 'utils';\n\nconst Parent = () => {\n    const [count, increase] = useReducer(s => s + 1, 0);\n\n    // Callback not memoized -> re-created on each render\n    const onChange = (...args) => {\n        doImportantBusinessLogic(args);\n        increase();\n    };\n\n    return (\n        <>\n            <h3>Rendered {count} times</h3>\n            <Input onChange={onChange} count={count} />\n        </>\n    );\n};\n\nconst Input = ({ onChange }) => {\n    const [enabled, toggle] = useReducer(s => !s, false);\n\n    // Dependency onChange not memoized -> infinite loop\n    useEffect(() => {\n        enabled && onChange('Some message from Input');\n    }, [enabled, onChange]);\n\n    return <Button onClick={toggle}>Toggle</Button>;\n};\n\nexport default memo(Parent);\n","import React, { useReducer } from 'react';\n\nimport Stringify from 'components/Stringify';\nimport Button from 'components/common/Button';\nimport Api from 'api';\n\nconst InputWithReducerAndProps = ({ userId }) => {\n    const [state, dispatch] = useReducer(reducer, {});\n\n    function reducer(prevState, action) {\n        const { type, payload } = action || {};\n\n        switch (type) {\n            case 'GET_POSTS':\n                return {\n                    ...prevState,\n                    loading: false,\n                    [userId]: {\n                        ...prevState[userId],\n                        posts: `Post count: ${payload.length}`,\n                    },\n                };\n            case 'GET_COMMENTS':\n                return {\n                    ...prevState,\n                    loading: false,\n                    [userId]: {\n                        ...prevState[userId],\n                        comments: `Comment count: ${payload.length}`,\n                    },\n                };\n            case 'LOADING':\n                return { ...prevState, loading: true };\n            default:\n                return prevState;\n        }\n    }\n\n    const thunkDispatch = async action => {\n        if (typeof action === 'function') {\n            action().then(r => dispatch(r));\n            return dispatch({ type: 'LOADING' });\n        }\n\n        return dispatch(action);\n    };\n\n    return (\n        <>\n            <Button\n                onClick={() =>\n                    thunkDispatch(() =>\n                        Api.getUsersPosts(userId).then(payload => ({\n                            payload,\n                            type: 'GET_POSTS',\n                        }))\n                    )\n                }>\n                GET /users/{userId}/posts\n            </Button>\n\n            <Button\n                onClick={() =>\n                    thunkDispatch(() =>\n                        Api.getUsersComments(userId).then(payload => ({\n                            payload,\n                            type: 'GET_COMMENTS',\n                        }))\n                    )\n                }>\n                GET /users/{userId}/comments\n            </Button>\n\n            <Stringify indent={2} className='block'>\n                {state}\n            </Stringify>\n        </>\n    );\n};\n\nexport default InputWithReducerAndProps;\n","export { default as InputWithComponents } from './InputWithComponents';\nexport { default as InputWithHooks } from './InputWithHooks';\nexport { default as InputWithReducer } from './InputWithReducer';\nexport { default as InputWithStore } from './InputWithStore';\nexport { default as InputWithShouldUpdate } from './InputWithShouldUpdate';\nexport { default as InputsWithResizer } from './InputsWithResizer';\nexport { default as InputWithEventTarget } from './InputWithEventTarget';\nexport {\n    default as InputWithPropsDependencies,\n} from './InputWithPropsDependencies';\nexport {\n    default as InputWithReducerAndProps,\n} from './InputWithReducerAndProps';\n","import React, { memo } from 'react';\n\nconst BASE_CLASS = 'render-count-text';\nconst renderCounts = {};\n\nconst RenderCountText = memo(({ text, onClick }) => {\n    renderCounts[text] = (renderCounts[text] || 0) + 1;\n\n    return (\n        <div>\n            <span onClick={onClick} className={BASE_CLASS}>\n                {text}, rendered {renderCounts[text]} times\n            </span>\n        </div>\n    );\n});\n\nexport default RenderCountText;\n","import React, { useCallback } from 'react';\n\nimport RenderCountText from './RenderCountText';\n\n/**\n * Parent is updating every 2s\n */\nconst RenderCountWithUseCallback = ({ text }) => {\n    // Crete new function on every render\n    const inlineCallback = () => alert(text);\n\n    // Generate new method only when text changes\n    const memoizedCallback = useCallback(() => alert(text), [text]);\n\n    return (\n        <>\n            <RenderCountText onClick={inlineCallback} text='inlineCallback' />\n            <RenderCountText onClick={memoizedCallback} text='useCallback' />\n        </>\n    );\n};\n\nexport default RenderCountWithUseCallback;\n","import React, { useMemo } from 'react';\n\nimport Stringify from 'components/Stringify';\nimport { generateText, generateTextCallCounts } from 'utils';\n\n/**\n * Parent is updating every 2s\n */\nconst RenderCountWithUseMemo = ({ text }) => {\n    // Generate on every render\n    // eslint-disable-next-line\n    const calculatedText = generateText(text, 'inline');\n\n    // Generate only when text changes\n    // eslint-disable-next-line\n    const memoizedText = useMemo(() => generateText(text, 'useMemo'), [text]);\n\n    return (\n        <Stringify className='block small' indent={2}>\n            {{ generateTextCallCounts }}\n        </Stringify>\n    );\n};\n\nexport default RenderCountWithUseMemo;\n","import React, { Component } from 'react';\n\nimport RenderCountText from './RenderCountText';\n\n/**\n * Parent is updating every 2s\n */\nclass RenderCountWithClass extends Component {\n    onClick = () => alert(this.props.text);\n\n    render() {\n        return <RenderCountText onClick={this.onClick} text='class' />;\n    }\n}\n\nexport default RenderCountWithClass;\n","import React, { useCallback, useRef, useEffect } from 'react';\n\nimport RenderCountText from './RenderCountText';\n\n/**\n * Parent is updating every 2s\n */\nconst RenderCountWithUseRef = ({ text }) => {\n    const latestText = useRef(text);\n    const memoizedCallback = useCallback(() => alert(latestText.current), []);\n\n    // Update ref when text prop changes\n    useEffect(() => {\n        latestText.current = text;\n    }, [text]);\n\n    return (\n        <RenderCountText onClick={memoizedCallback} text='useCallback+useRef' />\n    );\n};\n\nexport default RenderCountWithUseRef;\n","import React, { useState, useReducer } from 'react';\n\nimport {\n    RenderCountWithUseCallback,\n    RenderCountWithUseMemo,\n    RenderCountWithUseRef,\n    RenderCountWithClass,\n} from 'components/RenderCountText';\nimport { InputWithPropsDependencies } from 'components/Input';\nimport Button from 'components/common/Button';\nimport { CodeBlockButton } from 'components/CodeBlock';\nimport { useForceRender } from 'hooks';\n\nconst PerformanceView = () => {\n    const [classText, setClassText] = useState('Class text');\n    const [cbText, setCbText] = useState('useCallback text');\n    const [cbRefText, setCbRefText] = useState('useCallback+useRef text');\n    const [memoText, setMemoText] = useState('initial text');\n    const [memoCbMounted, toggleMemoCbMount] = useReducer(s => !s, false);\n\n    useForceRender(2000);\n\n    return (\n        <>\n            <h1>Performance optimization hooks</h1>\n\n            <h3>Class</h3>\n            <input\n                type='text'\n                value={classText}\n                onChange={({ target: { value } }) => setClassText(value)}\n            />\n            <CodeBlockButton fileName='components/RenderCountText/RenderCountWithClass.js' />\n            <RenderCountWithClass text={classText} />\n\n            <h3>useCallback</h3>\n            <input\n                type='text'\n                value={cbText}\n                onChange={({ target: { value } }) => setCbText(value)}\n            />\n            <CodeBlockButton fileName='components/RenderCountText/RenderCountWithUseCallback.js' />\n            <RenderCountWithUseCallback text={cbText} />\n\n            <h3>useCallback + useRef</h3>\n            <input\n                type='text'\n                value={cbRefText}\n                onChange={({ target: { value } }) => setCbRefText(value)}\n            />\n            <CodeBlockButton fileName='components/RenderCountText/RenderCountWithRef.js' />\n            <RenderCountWithUseRef text={cbRefText} />\n\n            <h3>useMemo</h3>\n            <input\n                type='text'\n                value={memoText}\n                onChange={({ target: { value } }) => setMemoText(value)}\n            />\n            <CodeBlockButton fileName='components/RenderCountText/RenderCountWithUseMemo.js' />\n            <RenderCountWithUseMemo text={memoText} />\n\n            <h3>Dependency memoizing</h3>\n            <Button onClick={toggleMemoCbMount}>\n                {memoCbMounted ? 'Unmount' : 'Mount'}\n            </Button>\n            <CodeBlockButton fileName='components/Input/InputWithPropsDependencies.js' />\n            {memoCbMounted && <InputWithPropsDependencies />}\n        </>\n    );\n};\n\nexport default PerformanceView;\n"],"sourceRoot":""}